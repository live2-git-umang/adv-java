package jdbc.crud;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import jdbc.util.DatabaseType;
import jdbc.util.DatabaseUtil;

public class Select_ResultSetScrolling {

	public static void main(String[] args) {
		//		fetchAllRecords();
		fetchAllRecordsTryWithResources();
		scrollOperations();
	}

	private static void fetchAllRecords() {
		Connection connection = null;
		Statement statement = null;
		ResultSet resultSet = null;
		try {
			// Establish a connection
			connection = DatabaseUtil.getConnection(DatabaseType.MYSQLDB);
			// Create a statement
			//			The object used for executing a static SQL statementand returning the results it produces. 
			statement = connection.createStatement();
			// Execute the query
			//			A table of data representing a database result set, which is usually generated by executing a statement that queries the database. 
			resultSet = statement.executeQuery("SELECT * FROM EMPLOYEES");

			// Print out a few columns from the table
			while (resultSet.next()) {
				int employeeId = resultSet.getInt("EMPLOYEE_ID");
				String firstName = resultSet.getString("FIRST_NAME");
				System.out.println(employeeId + "   " + firstName);
			}

		} catch (Exception e) {
			System.out.println("EXCEPTION :>> " + e);
		} finally {
			try {
				resultSet.close();
				statement.close();
				connection.close();
			} catch (SQLException e) {
				DatabaseUtil.displayError(e);
			}
		}
	}

	private static void fetchAllRecordsTryWithResources() {
		try ( // Establish a connection
				Connection connection = DatabaseUtil.getConnection(DatabaseType.MYSQLDB);
				// Create a statement
				//			The object used for executing a static SQL statement and returning the results it produces. 
				Statement statement = connection.createStatement();
				// Execute the query
				//			A table of data representing a database result set, which is usually generated by executing a statement that queries the database. 
				ResultSet resultSet = statement.executeQuery("SELECT * FROM EMPLOYEES");) {

			// Print out a few columns from the table
			/*
			 * while (resultSet.next()) { int employeeId = resultSet.getInt("EMPLOYEE_ID");
			 * String firstName = resultSet.getString("FIRST_NAME");
			 * System.out.println(employeeId + "   " + firstName); }
			 */

			//SCROLL REVERSE DIRECTION
			while (resultSet.previous()) { 
				int employeeId = resultSet.getInt("EMPLOYEE_ID");
				String firstName = resultSet.getString("FIRST_NAME");
				System.out.println(employeeId + "   " + firstName); 
			}

		} catch (Exception e) {
			System.out.println("EXCEPTION :>> " + e);
		}
	}

	private static void scrollOperations() {
		try ( // Establish a connection
				Connection connection = DatabaseUtil.getConnection(DatabaseType.MYSQLDB);
				// Create a statement
				//			The object used for executing a static SQL statement and returning the results it produces. 
				//Statement statement = connection.createStatement();
				//Statement statement = connection.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
				Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
				// Execute the query
				//			A table of data representing a database result set, which is usually generated by executing a statement that queries the database. 
				ResultSet resultSet = statement.executeQuery("SELECT * FROM EMPLOYEES");) {

			// Print out a few columns from the table
			/*
			 * while (resultSet.next()) { int employeeId = resultSet.getInt("EMPLOYEE_ID");
			 * String firstName = resultSet.getString("FIRST_NAME");
			 * System.out.println(employeeId + "   " + firstName); }
			 */

			//SCROLL REVERSE DIRECTION
			while (resultSet.previous()) { 
				int employeeId = resultSet.getInt("EMPLOYEE_ID");
				String firstName = resultSet.getString("FIRST_NAME");
				System.out.println(employeeId + "   " + firstName); 
			}

			System.out.println("MOVING TO A SPECIFIC RECORD");
			resultSet.absolute(1);
			int employeeId = resultSet.getInt("EMPLOYEE_ID");
			String firstName = resultSet.getString("FIRST_NAME");
			System.out.println(employeeId + "   " + firstName); 

			System.out.println("MOVING TO A SPECIFIC RECORD");
			resultSet.relative(2);
			firstName = resultSet.getString("FIRST_NAME");
			System.out.println(employeeId + "   " + firstName); 


		} catch (Exception e) {
			System.out.println("EXCEPTION :>> " + e);
		}
	}
}